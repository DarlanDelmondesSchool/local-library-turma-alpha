name: Exec2.5 Pipeline - Checkout + Upload + Download + GetVersion + Send to S3 + SNS
# ideia: Cloudformation --> EC2 com a versao do S3

on:
  push:
    branches: [ main ]
env:
  NOME_ARTEFATO: myApp

jobs:
  checkout:
    runs-on: ubuntu-latest
    name: Realiza Checkout e Upload via Action
    steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2.3.4
  #     with:
  #       repository: ${{ github.repository }}
  #   - name: Upload
  #     uses: actions/upload-artifact@v2.2.2
  #     with:
  #       name: ${{ env.NOME_ARTEFATO }}
  #       path: .

  # deployS3:
  #   runs-on: ubuntu-latest
  #   name: Inclui arquivo de marcacao
  #   needs: checkout
  #   steps:
  #   - name: Download
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: ${{ env.NOME_ARTEFATO }}
  #   - name: Add File
  #     run: echo 'Approved' > quality_gate_check.info
  #   - name: list dir
  #     run: ls -ltra; pwd
  #   - name: make dir
  #     run: mkdir pkg
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: sa-east-1
  #   - name: Get Offical version_app
  #     run: aws lambda invoke --function-name UpdateVersion version.txt
  #   - name: zip dir
  #     run: export VERSION=$(cat version.txt); echo $VERSION; zip -r pkg/package-$(echo $VERSION).zip *
  #   - name: Copy files to the test website with the AWS CLI
  #     run: |
  #       export VERSION=$(cat version.txt); echo $VERSION; aws s3 cp pkg/package-$(echo $VERSION).zip s3://github-repo-s3/myApp-version-$(echo $VERSION).zip
  #   - name: Sending SMS via sns
  #     run: |
  #       export VERSION=$(cat version.txt); echo $VERSION; aws sns publish --topic-arn "${{ secrets.ARN_TOPIC_AWS }}" --message "Deploy v-$(echo $VERSION) Realizado com Sucesso"
    - name: Creating a New Bucket S3
      run: |
        export VERSION=$(cat version.txt); aws cloudformation create-stack --stack-name myteststack-$(echo $VERSION) --template-body file://template.yaml







